/**********************************************************************************************************************
	FocusOPEN Digital Asset Manager (TM) 
	(c) Daydream Interactive Limited 1995-2011, All Rights Reserved

	The name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software
	without specific, written prior permission. Title to copyright in this software and any associated documentation
	will at all times remain with copyright holders.

	Please refer to licences/focusopen.txt or http://www.digitalassetmanager.com for licensing information about this
	software. 
**********************************************************************************************************************/

using System;
using System.Collections.Generic;
using System.ServiceModel;
using System.Xml.Linq;

namespace FocusOPEN.APS
{
	[ServiceContract]
	public interface IProcessingService
	{
		/// <summary>
		/// Gets a list of file extensions supported by the asset processing service
		/// </summary>
		[OperationContract]
		List<string> GetSupportedExtensions();

		/// <summary>
		/// Gets a list of all file types generated and the plugins which generate them
		/// </summary>
		[OperationContract]
		List<string> FileExtensionsGenerated();

		/// <summary>
		/// Gets a list of plugins supported for the specified extension
		/// </summary>
		[OperationContract]
		List<string> GetPlugins(string extension);

		/// <summary>
		/// Submits a job to the asset processing service to be added to the queue
		/// and processed as soon as possible.
		/// </summary>
		/// <returns>Job ID</returns>
		[OperationContract]
		long SubmitJob(Job job);

		/// <summary>
		/// Submits a job to the asset processing service to be processed immediately
		/// </summary>
		[OperationContract]
		JobResult ProcessJob(Job job);

		/// <summary>
		/// Gets the metadata from the specified file and returns it as XML
		/// </summary>
		/// <param name="path">The path to the file from which metadata should be extracted</param>
		[OperationContract]
		XElement GetAssetMetadata(string path);

		/// <summary>
		/// Gets the extension generated by a plugin when passed a file type 
		/// </summary>
		[OperationContract]
		string GetExtensionGenerated(string pluginName, string extension);

		/// <summary>
		/// Gets current information about the status of the asset processing service
		/// </summary>
		[OperationContract]
		ServiceStatus GetServiceStatus();

		/// <summary>
		/// Gets the current version information
		/// </summary>
		[OperationContract]
		VersionInfo GetVersionInfo();
	}
}