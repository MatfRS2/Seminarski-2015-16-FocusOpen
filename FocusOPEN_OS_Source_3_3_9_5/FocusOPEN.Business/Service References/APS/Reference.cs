//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FocusOPEN.Business.APS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/FocusOPEN.APS")]
    [System.SerializableAttribute()]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallbackUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatePreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateThumbnailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverrideHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverrideWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PluginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WatermarkPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalData {
            get {
                return this.AdditionalDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDataField, value) != true)) {
                    this.AdditionalDataField = value;
                    this.RaisePropertyChanged("AdditionalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetId {
            get {
                return this.AssetIdField;
            }
            set {
                if ((this.AssetIdField.Equals(value) != true)) {
                    this.AssetIdField = value;
                    this.RaisePropertyChanged("AssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallbackUrl {
            get {
                return this.CallbackUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackUrlField, value) != true)) {
                    this.CallbackUrlField = value;
                    this.RaisePropertyChanged("CallbackUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatePreview {
            get {
                return this.CreatePreviewField;
            }
            set {
                if ((this.CreatePreviewField.Equals(value) != true)) {
                    this.CreatePreviewField = value;
                    this.RaisePropertyChanged("CreatePreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateThumbnail {
            get {
                return this.CreateThumbnailField;
            }
            set {
                if ((this.CreateThumbnailField.Equals(value) != true)) {
                    this.CreateThumbnailField = value;
                    this.RaisePropertyChanged("CreateThumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputPath {
            get {
                return this.InputPathField;
            }
            set {
                if ((object.ReferenceEquals(this.InputPathField, value) != true)) {
                    this.InputPathField = value;
                    this.RaisePropertyChanged("InputPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverrideHeight {
            get {
                return this.OverrideHeightField;
            }
            set {
                if ((this.OverrideHeightField.Equals(value) != true)) {
                    this.OverrideHeightField = value;
                    this.RaisePropertyChanged("OverrideHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverrideWidth {
            get {
                return this.OverrideWidthField;
            }
            set {
                if ((this.OverrideWidthField.Equals(value) != true)) {
                    this.OverrideWidthField = value;
                    this.RaisePropertyChanged("OverrideWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PluginName {
            get {
                return this.PluginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PluginNameField, value) != true)) {
                    this.PluginNameField = value;
                    this.RaisePropertyChanged("PluginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WatermarkPath {
            get {
                return this.WatermarkPathField;
            }
            set {
                if ((object.ReferenceEquals(this.WatermarkPathField, value) != true)) {
                    this.WatermarkPathField = value;
                    this.RaisePropertyChanged("WatermarkPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobResult", Namespace="http://schemas.datacontract.org/2004/07/FocusOPEN.APS")]
    [System.SerializableAttribute()]
    public partial class JobResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Xml.Linq.XElement MetadataXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreviewPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalData {
            get {
                return this.AdditionalDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDataField, value) != true)) {
                    this.AdditionalDataField = value;
                    this.RaisePropertyChanged("AdditionalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetId {
            get {
                return this.AssetIdField;
            }
            set {
                if ((this.AssetIdField.Equals(value) != true)) {
                    this.AssetIdField = value;
                    this.RaisePropertyChanged("AssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputFile {
            get {
                return this.InputFileField;
            }
            set {
                if ((object.ReferenceEquals(this.InputFileField, value) != true)) {
                    this.InputFileField = value;
                    this.RaisePropertyChanged("InputFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.Linq.XElement MetadataXml {
            get {
                return this.MetadataXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataXmlField, value) != true)) {
                    this.MetadataXmlField = value;
                    this.RaisePropertyChanged("MetadataXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreviewPath {
            get {
                return this.PreviewPathField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviewPathField, value) != true)) {
                    this.PreviewPathField = value;
                    this.RaisePropertyChanged("PreviewPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailPath {
            get {
                return this.ThumbnailPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailPathField, value) != true)) {
                    this.ThumbnailPathField = value;
                    this.RaisePropertyChanged("ThumbnailPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingletonOfServiceStatus78_P_SGaNV", Namespace="http://schemas.datacontract.org/2004/07/FocusOPEN.APS")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FocusOPEN.Business.APS.ServiceStatus))]
    public partial class SingletonOfServiceStatus78_P_SGaNV : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceStatus", Namespace="http://schemas.datacontract.org/2004/07/FocusOPEN.APS")]
    [System.SerializableAttribute()]
    public partial class ServiceStatus : FocusOPEN.Business.APS.SingletonOfServiceStatus78_P_SGaNV {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfJobsInProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfJobsInQueueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfJobsProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime QueueLastCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfJobsInProgress {
            get {
                return this.NumberOfJobsInProgressField;
            }
            set {
                if ((this.NumberOfJobsInProgressField.Equals(value) != true)) {
                    this.NumberOfJobsInProgressField = value;
                    this.RaisePropertyChanged("NumberOfJobsInProgress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfJobsInQueue {
            get {
                return this.NumberOfJobsInQueueField;
            }
            set {
                if ((this.NumberOfJobsInQueueField.Equals(value) != true)) {
                    this.NumberOfJobsInQueueField = value;
                    this.RaisePropertyChanged("NumberOfJobsInQueue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfJobsProcessed {
            get {
                return this.NumberOfJobsProcessedField;
            }
            set {
                if ((this.NumberOfJobsProcessedField.Equals(value) != true)) {
                    this.NumberOfJobsProcessedField = value;
                    this.RaisePropertyChanged("NumberOfJobsProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime QueueLastChecked {
            get {
                return this.QueueLastCheckedField;
            }
            set {
                if ((this.QueueLastCheckedField.Equals(value) != true)) {
                    this.QueueLastCheckedField = value;
                    this.RaisePropertyChanged("QueueLastChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionInfo", Namespace="http://schemas.datacontract.org/2004/07/FocusOPEN.APS")]
    [System.SerializableAttribute()]
    public partial class VersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevisionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Build {
            get {
                return this.BuildField;
            }
            set {
                if ((this.BuildField.Equals(value) != true)) {
                    this.BuildField = value;
                    this.RaisePropertyChanged("Build");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Major {
            get {
                return this.MajorField;
            }
            set {
                if ((this.MajorField.Equals(value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minor {
            get {
                return this.MinorField;
            }
            set {
                if ((this.MinorField.Equals(value) != true)) {
                    this.MinorField = value;
                    this.RaisePropertyChanged("Minor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="APS.IProcessingService")]
    public interface IProcessingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/GetSupportedExtensions", ReplyAction="http://tempuri.org/IProcessingService/GetSupportedExtensionsResponse")]
        string[] GetSupportedExtensions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/FileExtensionsGenerated", ReplyAction="http://tempuri.org/IProcessingService/FileExtensionsGeneratedResponse")]
        string[] FileExtensionsGenerated();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/GetPlugins", ReplyAction="http://tempuri.org/IProcessingService/GetPluginsResponse")]
        string[] GetPlugins(string extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/SubmitJob", ReplyAction="http://tempuri.org/IProcessingService/SubmitJobResponse")]
        long SubmitJob(FocusOPEN.Business.APS.Job job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/ProcessJob", ReplyAction="http://tempuri.org/IProcessingService/ProcessJobResponse")]
        FocusOPEN.Business.APS.JobResult ProcessJob(FocusOPEN.Business.APS.Job job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/GetAssetMetadata", ReplyAction="http://tempuri.org/IProcessingService/GetAssetMetadataResponse")]
        System.Xml.Linq.XElement GetAssetMetadata(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/GetExtensionGenerated", ReplyAction="http://tempuri.org/IProcessingService/GetExtensionGeneratedResponse")]
        string GetExtensionGenerated(string pluginName, string extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/GetServiceStatus", ReplyAction="http://tempuri.org/IProcessingService/GetServiceStatusResponse")]
        FocusOPEN.Business.APS.ServiceStatus GetServiceStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcessingService/GetVersionInfo", ReplyAction="http://tempuri.org/IProcessingService/GetVersionInfoResponse")]
        FocusOPEN.Business.APS.VersionInfo GetVersionInfo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IProcessingServiceChannel : FocusOPEN.Business.APS.IProcessingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessingServiceClient : System.ServiceModel.ClientBase<FocusOPEN.Business.APS.IProcessingService>, FocusOPEN.Business.APS.IProcessingService {
        
        public ProcessingServiceClient() {
        }
        
        public ProcessingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetSupportedExtensions() {
            return base.Channel.GetSupportedExtensions();
        }
        
        public string[] FileExtensionsGenerated() {
            return base.Channel.FileExtensionsGenerated();
        }
        
        public string[] GetPlugins(string extension) {
            return base.Channel.GetPlugins(extension);
        }
        
        public long SubmitJob(FocusOPEN.Business.APS.Job job) {
            return base.Channel.SubmitJob(job);
        }
        
        public FocusOPEN.Business.APS.JobResult ProcessJob(FocusOPEN.Business.APS.Job job) {
            return base.Channel.ProcessJob(job);
        }
        
        public System.Xml.Linq.XElement GetAssetMetadata(string path) {
            return base.Channel.GetAssetMetadata(path);
        }
        
        public string GetExtensionGenerated(string pluginName, string extension) {
            return base.Channel.GetExtensionGenerated(pluginName, extension);
        }
        
        public FocusOPEN.Business.APS.ServiceStatus GetServiceStatus() {
            return base.Channel.GetServiceStatus();
        }
        
        public FocusOPEN.Business.APS.VersionInfo GetVersionInfo() {
            return base.Channel.GetVersionInfo();
        }
    }
}
